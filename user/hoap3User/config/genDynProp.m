load tabela
% these joint names match those defined in root/include/<THE-header.h>
jointnames={...
    'RL_J1',  	'RL_J2',  	'RL_J3',  	'RL_J4',  	'RL_J5',  	'RL_J6',...
    'RA_J1',  	'RA_J2',  	'RA_J3',  	'RA_J4',...  	
    'LL_J1',  	'LL_J2',  	'LL_J3',  	'LL_J4',  	'LL_J5',  	'LL_J6',...
  	'LA_J1',  	'LA_J2',  	'LA_J3',  	'LA_J4' ...
    'B_J ',...
    'H_J1',  	'H_J2',  	'H_J3', ...
    'RA_J5',  	'RA_J6',...
  	'LA_J5',  	'LA_J6'};

% joint limits are set here
jointLowerLimits=[...
    -91     -31     -82     -1      -61     -25 ...
    -91     -96     -91     -115 ...
    -31     -21     -82     -1      -61     -25 ...
    -91     -1      -91     -115 ...
    -1 ...
    -60     -45     -15 ...
    -60     -90 ...
    -60     -90 ]*pi/180;

jointUpperLimits=[...
    31      21      71      130     61      25 ...
    151     1       91      1 ...
    91      31      71      130     61      25 ...
    151     96      91      1 ...
    90      ...
    60      15      15 ...
    60      90      ...
    60      90 ]*pi/180;


%%  parse table - dynamical params

for joint=1:26
    switch joint
        case 21
            par{joint}.name=jointnames{21};
            
        case 22
            par{joint}.name=jointnames{21};
        
        case 23
            par{joint}.name=jointnames{21};
        case 24
            par{joint}.name='WAIST';
        otherwise
            if joint<21
                par{joint}.name=jointnames{joint};
            else
                par{joint}.name=jointnames{joint-3};
            end
    end
  
    par{joint}.m=   untitled(   (joint-1)*12+1,4);
    par{joint}.CoM= untitled(   (joint-1)*12+4,1:3)/1000;
    par{joint}.I=   untitled(   (joint-1)*12+9:...
                                (joint-1)*12+11,1:3)/1000000;
    % dummy
    par{joint}.vis=0;
    par{joint}.coul=0;
    par{joint}.stiff=0;
    par{joint}.cons=0;
end


%% create LinkParameters*.cf
fileID = fopen('LinkParametersMatlab.cf','w');
fprintf(fileID,'/* format: keyword, mass, cmx, cmy, cmz, i11, i12, i13, i22, i23, i33, vis, coul, stiff, cons */');
for joint=1:26
    J=par{joint};
    fprintf(fileID,...
    '\n%s \t% 7.4f \t % 7.4f \t % 7.4f \t % 7.4f \t % 7.4f \t % 7.4f \t % 7.4f \t % 7.4f \t % 7.4f \t % 7.4f \t % 7.4f \t % 7.4f \t % 7.4f\t% 6.4f',...
        J.name,...
        J.m,...
        J.CoM(1),...
        J.CoM(2),...
        J.CoM(3),...
        J.I(1,1),...
        J.I(1,2),...
        J.I(1,3),...
        J.I(2,2),...
        J.I(2,3),...
        J.I(3,3),...
        J.vis,...
        J.coul,...
        J.stiff,...
        J.cons);  
end

fclose(fileID);


%% create Gains.cf
fileID = fopen('GainsMatlab.cf','w');
fprintf(fileID,'/* format: keyword, gain_th, gain_thd, gain_int, max_control  */');
for joint=1:28
    fprintf(fileID,...
    '\n%s \t% 7.0f \t % 7.0f \t % 7.3f \t % 7.0f ',...
        jointnames{joint},...
        500,    70,    0.001,   300);
end

fclose(fileID);

%% create SensorOffset.cf
fileID = fopen('SensorOffsetMatlab.cf','w');
fprintf(fileID,'/* format: keyword, min , max, default, rest, weight, offset   */');
for joint=1:28
    fprintf(fileID,...
    '\n%s\t% 5.2f\t% 5.2f\t% 5.2f\t% 5.2f\t% 5.2f\t% 5.2f',...
        jointnames{joint},...
        jointLowerLimits(joint),    ...
        jointUpperLimits(joint),    0.0, 0.0, 1, 0.0);
end

fclose(fileID);


%% create SensorCalibration.cf
fileID = fopen('SensorCalibrationMatlab.cf','w');
fprintf(fileID,'/* format: keyword, jaba daba du ! 1   */');
for joint=1:28
    fprintf(fileID,...
    '\n%s\t%d \t%d \t%d \t%d \t%d \t%d \t%d',...
        jointnames{joint},...
        0, 0, 0, 0, 0, 1, 1);
end

fclose(fileID);

%% create SensorFilter.cf
fileID = fopen('SensorFilterMatlab.cf','w');
fprintf(fileID,'/* format: keyword, cutoff th, cutoff thd, cutoff thdd, cutoff load  */');
for joint=1:28
    fprintf(fileID,...
    '\n%s\t%d \t%d \t%d \t%d',...
        jointnames{joint},...
        100, 100, 100, 100 );
end

fclose(fileID);